version: "3"

services:
  redis:
    image: redis
    restart: on-failure
    expose:
      - 6379
    env_file:
      - ".env"

  db:
    image: postgres
    restart: on-failure
    expose:
      - 5432
    volumes:
      - pg_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    env_file:
      - ".env"

  app:
    build: .
    tty: true
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    env_file:
      - ".env"
    depends_on:
      db:
        condition: service_healthy
    restart: on-failure

  celery:
    build: .
    tty: true
    command: celery -A config worker -l INFO
    restart: on-failure
    volumes:
      - .:/app
    depends_on:
      - redis
      - db
      - app
    env_file:
      - ".env"

  celery-beat:
    build: .
    tty: true
    command: celery -A config beat -l INFO
    restart: on-failure
    volumes:
      - .:/app
    depends_on:
      - redis
      - db
      - app
    env_file:
      - ".env"

volumes:
  pg_data:
